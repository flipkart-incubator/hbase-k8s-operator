{{ define "com.flipkart.hbaseoperator.deployment" }}
{{- $defaultResources := dict "cpuRequest" "150m" "memoryRequest" "250Mi" "cpuLimit" "150m" "memoryLimit" "250Mi" -}}
{{- $overrideResources := .Values.resource -}}
{{- $resource := merge $overrideResources $defaultResources  -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: {{ .Values.image.kube_rbac_proxy.image_name }}:{{ .Values.image.kube_rbac_proxy.tag }}
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ADDITIONAL_WATCH_NAMESPACES
          valueFrom:
            configMapKeyRef:
              key: ADDITIONAL_WATCH_NAMESPACES
              name: hbase-operator-config
              optional: true
        image: {{ .Values.image.hbase_operator.image_name }}:{{ .Values.image.hbase_operator.tag }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: {{ $resource.cpuLimit }}
            memory: {{ $resource.memoryRequest }}
          requests:
            cpu: {{ $resource.cpuRequest }}
            memory: {{ $resource.memoryRequest }}
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ .Values.serviceAccountName }}
      terminationGracePeriodSeconds: 10
{{ end }}
