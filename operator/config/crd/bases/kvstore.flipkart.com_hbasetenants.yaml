
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: hbasetenants.kvstore.flipkart.com
spec:
  group: kvstore.flipkart.com
  names:
    kind: HbaseTenant
    listKind: HbaseTenantList
    plural: hbasetenants
    singular: hbasetenant
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: HbaseTenant is the Schema for the hbasetenants API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HbaseTenantSpec defines the desired state of HbaseTenant
            properties:
              baseImage:
                type: string
              configuration:
                properties:
                  hadoopConfig:
                    additionalProperties:
                      type: string
                    type: object
                  hadoopConfigMountPath:
                    type: string
                  hadoopConfigName:
                    type: string
                  hadoopTenantConfig:
                    items:
                      additionalProperties:
                        type: string
                      type: object
                    type: array
                  hbaseConfig:
                    additionalProperties:
                      type: string
                    type: object
                  hbaseConfigMountPath:
                    type: string
                  hbaseConfigName:
                    type: string
                  hbaseTenantConfig:
                    items:
                      additionalProperties:
                        type: string
                      type: object
                    type: array
                required:
                - hadoopConfig
                - hadoopConfigMountPath
                - hadoopConfigName
                - hbaseConfig
                - hbaseConfigMountPath
                - hbaseConfigName
                type: object
              datanode:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  containers:
                    items:
                      properties:
                        args:
                          items:
                            type: string
                          type: array
                        command:
                          items:
                            type: string
                          type: array
                        cpuLimit:
                          type: string
                        cpuRequest:
                          type: string
                        lifecycle:
                          properties:
                            postStart:
                              items:
                                type: string
                              type: array
                            preStop:
                              items:
                                type: string
                              type: array
                          type: object
                        livenessProbe:
                          properties:
                            command:
                              items:
                                type: string
                              type: array
                            failureThreshold:
                              format: int32
                              type: integer
                            initialDelay:
                              format: int32
                              type: integer
                            period:
                              format: int32
                              type: integer
                            successThreshold:
                              format: int32
                              type: integer
                            tcpPort:
                              type: integer
                            timeout:
                              format: int32
                              type: integer
                          type: object
                        memoryLimit:
                          type: string
                        memoryRequest:
                          type: string
                        name:
                          type: string
                        ports:
                          items:
                            properties:
                              name:
                                type: string
                              port:
                                format: int32
                                type: integer
                            required:
                            - name
                            - port
                            type: object
                          type: array
                        readinessProbe:
                          properties:
                            command:
                              items:
                                type: string
                              type: array
                            failureThreshold:
                              format: int32
                              type: integer
                            initialDelay:
                              format: int32
                              type: integer
                            period:
                              format: int32
                              type: integer
                            successThreshold:
                              format: int32
                              type: integer
                            tcpPort:
                              type: integer
                            timeout:
                              format: int32
                              type: integer
                          type: object
                        securityContext:
                          properties:
                            addSysPtrace:
                              type: boolean
                            runAsGroup:
                              format: int64
                              type: integer
                            runAsUser:
                              format: int64
                              type: integer
                          required:
                          - runAsGroup
                          - runAsUser
                          type: object
                        startupProbe:
                          properties:
                            command:
                              items:
                                type: string
                              type: array
                            failureThreshold:
                              format: int32
                              type: integer
                            initialDelay:
                              format: int32
                              type: integer
                            period:
                              format: int32
                              type: integer
                            successThreshold:
                              format: int32
                              type: integer
                            tcpPort:
                              type: integer
                            timeout:
                              format: int32
                              type: integer
                          type: object
                        volumeMounts:
                          items:
                            properties:
                              mountPath:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                      required:
                      - command
                      - cpuLimit
                      - cpuRequest
                      - livenessProbe
                      - memoryLimit
                      - memoryRequest
                      - name
                      - ports
                      - securityContext
                      type: object
                    type: array
                  dnsConfig:
                    description: PodDNSConfig defines the DNS parameters of a pod
                      in addition to those generated from DNSPolicy.
                    properties:
                      nameservers:
                        description: A list of DNS name server IP addresses. This
                          will be appended to the base nameservers generated from
                          DNSPolicy. Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                      options:
                        description: A list of DNS resolver options. This will be
                          merged with the base options generated from DNSPolicy. Duplicated
                          entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: Required.
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      searches:
                        description: A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated
                          from DNSPolicy. Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                    type: object
                  dnsPolicy:
                    description: DNSPolicy defines how a pod's DNS will be configured.
                    type: string
                  hostAliases:
                    items:
                      description: HostAlias holds the mapping between IP and hostnames
                        that will be injected as an entry in the pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      type: object
                    type: array
                  hostname:
                    type: string
                  initContainers:
                    items:
                      properties:
                        args:
                          items:
                            type: string
                          type: array
                        command:
                          items:
                            type: string
                          type: array
                        cpuLimit:
                          type: string
                        cpuRequest:
                          type: string
                        isBootstrap:
                          type: boolean
                        memoryLimit:
                          type: string
                        memoryRequest:
                          type: string
                        name:
                          type: string
                        securityContext:
                          properties:
                            addSysPtrace:
                              type: boolean
                            runAsGroup:
                              format: int64
                              type: integer
                            runAsUser:
                              format: int64
                              type: integer
                          required:
                          - runAsGroup
                          - runAsUser
                          type: object
                        volumeMounts:
                          items:
                            properties:
                              mountPath:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                      required:
                      - command
                      - cpuLimit
                      - cpuRequest
                      - memoryLimit
                      - memoryRequest
                      - name
                      - securityContext
                      type: object
                    type: array
                  isPodServiceRequired:
                    default: false
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  podDisruptionBudget:
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        x-kubernetes-int-or-string: true
                    type: object
                  podManagementPolicy:
                    default: Parallel
                    description: PodManagementPolicyType defines the policy for creating
                      pods under a stateful set.
                    enum:
                    - Parallel
                    - OrderedReady
                    type: string
                  serviceAccountName:
                    type: string
                  shareProcessNamespace:
                    default: false
                    type: boolean
                  sidecarContainers:
                    items:
                      properties:
                        args:
                          items:
                            type: string
                          type: array
                        command:
                          items:
                            type: string
                          type: array
                        cpuLimit:
                          type: string
                        cpuRequest:
                          type: string
                        image:
                          type: string
                        memoryLimit:
                          type: string
                        memoryRequest:
                          type: string
                        name:
                          type: string
                        securityContext:
                          properties:
                            addSysPtrace:
                              type: boolean
                            runAsGroup:
                              format: int64
                              type: integer
                            runAsUser:
                              format: int64
                              type: integer
                          required:
                          - runAsGroup
                          - runAsUser
                          type: object
                        volumeMounts:
                          items:
                            properties:
                              mountPath:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                      required:
                      - cpuLimit
                      - cpuRequest
                      - image
                      - memoryLimit
                      - memoryRequest
                      - name
                      - securityContext
                      type: object
                    type: array
                  size:
                    format: int32
                    minimum: 1
                    type: integer
                  subdomain:
                    type: string
                  terminateGracePeriod:
                    format: int64
                    minimum: 10
                    type: integer
                  topologySpreadConstraints:
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: LabelSelector is used to find matching pods.
                            Pods that match this label selector are counted to determine
                            the number of pods in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        maxSkew:
                          description: 'MaxSkew describes the degree to which pods
                            may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                            it is the maximum permitted difference between the number
                            of matching pods in the target topology and the global
                            minimum. For example, in a 3-zone cluster, MaxSkew is
                            set to 1, and pods with the same labelSelector spread
                            as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       |
                            - if MaxSkew is 1, incoming pod can only be scheduled
                            to zone3 to become 1/1/1; scheduling it onto zone1(zone2)
                            would make the ActualSkew(2-0) on zone1(zone2) violate
                            MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled
                            onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                            it is used to give higher precedence to topologies that
                            satisfy it. It''s a required field. Default value is 1
                            and 0 is not allowed.'
                          format: int32
                          type: integer
                        topologyKey:
                          description: TopologyKey is the key of node labels. Nodes
                            that have a label with this key and identical values are
                            considered to be in the same topology. We consider each
                            <key, value> as a "bucket", and try to put balanced number
                            of pods into each bucket. It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: 'WhenUnsatisfiable indicates how to deal with
                            a pod if it doesn''t satisfy the spread constraint. -
                            DoNotSchedule (default) tells the scheduler not to schedule
                            it. - ScheduleAnyway tells the scheduler to schedule the
                            pod in any location,   but giving higher precedence to
                            topologies that would help reduce the   skew. A constraint
                            is considered "Unsatisfiable" for an incoming pod if and
                            only if every possible node assigment for that pod would
                            violate "MaxSkew" on some topology. For example, in a
                            3-zone cluster, MaxSkew is set to 1, and pods with the
                            same labelSelector spread as 3/1/1: | zone1 | zone2 |
                            zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable
                            is set to DoNotSchedule, incoming pod can only be scheduled
                            to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1)
                            on zone2(zone3) satisfies MaxSkew(1). In other words,
                            the cluster can still be imbalanced, but scheduler won''t
                            make it *more* imbalanced. It''s a required field.'
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                  volumeClaims:
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        storageClassName:
                          type: string
                        storageSize:
                          type: string
                      required:
                      - name
                      - storageSize
                      type: object
                    type: array
                  volumes:
                    items:
                      properties:
                        configName:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        secretName:
                          type: string
                        volumeSource:
                          enum:
                          - ConfigMap
                          - EmptyDir
                          - Secret
                          - HostPath
                          type: string
                      required:
                      - name
                      - volumeSource
                      type: object
                    type: array
                required:
                - containers
                - isPodServiceRequired
                - name
                - size
                - terminateGracePeriod
                type: object
              fsgroup:
                format: int64
                type: integer
              serviceLabels:
                additionalProperties:
                  type: string
                type: object
              serviceSelectorLabels:
                additionalProperties:
                  type: string
                type: object
            required:
            - baseImage
            - configuration
            - datanode
            - fsgroup
            type: object
          status:
            description: HbaseTenantStatus defines the observed state of HbaseTenant
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              nodes:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file TODO'
                items:
                  type: string
                type: array
            required:
            - conditions
            - nodes
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
